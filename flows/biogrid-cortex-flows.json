[{"id":"184704d7.e7b8fb","type":"mqtt-broker","z":"146f3e2e.eb90c2","broker":"cortex_mosquitto_1","port":"1883","clientid":"Node-RED","usetls":false,"verifyservercert":true,"compatmode":true,"keepalive":"15","cleansession":true,"willTopic":"connections/lost","willQos":"0","willRetain":"false","willPayload":"Node-RED connection lost","birthTopic":"connections/birth","birthQos":"0","birthRetain":"false","birthPayload":"Node-RED connected"},{"id":"bd9bcd83.42643","type":"mongodb","z":"146f3e2e.eb90c2","hostname":"cortex_mongo_1","port":"27017","db":"biogrid","name":""},{"id":"43e4405a.bc1bc","type":"inject","z":"146f3e2e.eb90c2","name":"RH","topic":"rh","payload":"{\"id\":\"81772309-6FFF-4886-9977-DA15AD34C263\"}","payloadType":"json","repeat":"1","crontab":"","once":false,"x":112,"y":244,"wires":[["f0ed0ef2.0f12f"]]},{"id":"fa9f06fd.0560f8","type":"function","z":"146f3e2e.eb90c2","name":"prepare update","func":"var sensorType = msg.topic;\nvar sensorId = msg.payload.id;\nvar value = msg.payload.value;\n\nnode.log(\"ID:\" + sensorId + \" Type: \" + sensorType + \" value: \" + value);\n\nvar ts = new Date();\n\nmsg.payload = {}\nvar hours = ts.getHours();\nvar minutes = ts.getMinutes(); \nvar seconds = ts.getSeconds();\nvar day = ts.toISOString().substring(0, 10);\n\n// Update the document for the current day (or create new)\n// See https://github.com/node-red/node-red-nodes/blob/master/storage/mongodb/66-mongodb.js\nvar query = {\n    sensor_id: sensorId,\n    day: day\n};\nvar key = \"values.\" + hours + \".\" + minutes + \".\" + seconds;\nvar update = {}\nupdate['$set'] = {}\nupdate['$set'][key] = value\n\nmsg.query = query\nmsg.payload = update\nmsg.collection = sensorType\n\nreturn msg;","outputs":1,"noerr":0,"x":507,"y":280,"wires":[["357b4aac.ca84b6","16a567df.e95a98"]]},{"id":"bbe1c4b5.441e38","type":"inject","z":"146f3e2e.eb90c2","name":"CO2","topic":"co2","payload":"{\"id\":\"F5DF0E1C-5BE1-4C49-B22F-B5542564BB9A\"}","payloadType":"json","repeat":"5","crontab":"","once":false,"x":111,"y":318,"wires":[["a620d956.59df28"]]},{"id":"357b4aac.ca84b6","type":"debug","z":"146f3e2e.eb90c2","name":"Debug out","active":false,"console":"false","complete":"payload","x":708,"y":216,"wires":[]},{"id":"f0ed0ef2.0f12f","type":"function","z":"146f3e2e.eb90c2","name":"1h sine wave","func":"var v = (new Date()).getTime();\nmsg.payload = { id: msg.payload.id, value: 1024 * (Math.sin(v / 3600000) + 1) };\nreturn msg;","outputs":1,"noerr":0,"x":274,"y":241,"wires":[["fa9f06fd.0560f8"]]},{"id":"a620d956.59df28","type":"function","z":"146f3e2e.eb90c2","name":"24h sine wave","func":"var v = (new Date()).getTime();\nmsg.payload = { id: msg.payload.id, value: 1024 * (Math.cos(v / (24 * 3600000)) + 1) };\nreturn msg;","outputs":1,"noerr":0,"x":278,"y":319,"wires":[["fa9f06fd.0560f8"]]},{"id":"16a567df.e95a98","type":"mongodb out","z":"146f3e2e.eb90c2","mongodb":"bd9bcd83.42643","name":"MongoDB timeseries updater","collection":"","payonly":false,"upsert":true,"multi":true,"operation":"update","x":693,"y":374,"wires":[]},{"id":"bbd34043.442cc","type":"comment","z":"146f3e2e.eb90c2","name":"README","info":"This flow creates a constant stream of simulated sensor data. \n\n## RH\nRH is simulated relative humidity sensor that generates a sine wave pattern over a 1h time period. It generates new values every second.\n\n## CO2\nCO2 is simulated CO2-sensor. It generates a sine wave pattern over a 24h time period. It generates new values every 5 seconds.\n\n## MongoDB\nThe sensor data readings are stored in a mongo database named \"biogrid\". Each sensor type has its own collection.","x":424,"y":74,"wires":[]},{"id":"8586dfa0.7a792","type":"change","z":"146f3e2e.eb90c2","name":"set topic to sensor type","rules":[{"t":"change","p":"topic","pt":"msg","from":"/sensor/","fromt":"str","to":"","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":297.5,"y":464,"wires":[["fa9f06fd.0560f8"]]},{"id":"c4f9f4bb.3b0608","type":"comment","z":"146f3e2e.eb90c2","name":"Real sensor data","info":"Real sensors will publish data to an MQTT topic named /sensor/type, for example /sensor/ph for a pH-sensor. \nThe payload should contain two values: id, the sensor guid and value, the sensor reading value.","x":114.5,"y":405,"wires":[]},{"id":"9f0f28e9.60f0d8","type":"comment","z":"146f3e2e.eb90c2","name":"Simulated sensor data","info":"","x":133,"y":178,"wires":[]},{"id":"500b25b4.aff4dc","type":"mqtt in","z":"146f3e2e.eb90c2","name":"sensors","topic":"/sensor/#","broker":"184704d7.e7b8fb","x":88.5,"y":464,"wires":[["8586dfa0.7a792"]]}]